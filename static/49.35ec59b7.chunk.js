webpackJsonp([49],{1547:function(t,n,e){var a=e(1),o=e(67),r=e(308).PageRenderer;r.__esModule&&(r=r.default);var i=o({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:e(1603)}},componentWillMount:function(){},render:function(){return a.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});i.__catalog_loader__=!0,t.exports=i},1603:function(t,n){t.exports='```react\nnoSource: true\n---\n<React.Fragment>\n\t<V6Banner>\n\t\t<AcceptsStyledSystemProps />\n\t</V6Banner>\n</React.Fragment>\n```\n\nButtons allow users to command the computer to take some action. Buttons, like all standard form components, usually have 16 px space between them.\n\n## Component Variations\n\n### Variants\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<Button variant="primary" size="medium">\n\t\tPrimary\n\t</Button>\n\t<Button variant="secondary" size="medium">\n\t\tSecondary\n\t</Button>\n\t<Button variant="minor" size="medium">\n\t\tMinor\n\t</Button>\n\t<Button variant="transparent" size="medium">\n\t\tTransparent\n\t</Button>\n\t<Button variant="minorTransparent" size="medium">\n\t\tMinor Transparent\n\t</Button>\n\t<Button variant="link" size="medium">\n\t\tLink\n\t</Button>\n\t<Button variant="danger" size="medium">\n\t\tDanger\n\t</Button>\n\t<Button variant="dangerSpecial" size="medium">\n\t\tDanger (Special)\n\t</Button>\n</ButtonDemo>\n```\n\n### Size\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<Button variant="primary" size="small">\n\t\tSmall\n\t</Button>\n\t<Button variant="primary" size="medium">\n\t\tMedium\n\t</Button>\n\t<Button variant="primary" size="large">\n\t\tLarge\n\t</Button>\n</ButtonDemo>\n```\n\n### With Icon\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<Button variant="primary" size="large" icon={<GearIcon />}>\n\t\tSettings\n\t</Button>\n\t<Button variant="primary" size="small" icon={<GearIcon />}>\n\t\tSettings\n\t</Button>\n\t<Button variant="primary" size="small" icon={<GearIcon />} />\n\t<Button variant="transparent" size="small" icon={<GearIcon />} />\n\t<Button variant="minorTransparent" size="small" icon={<GearIcon />} />\n</ButtonDemo>\n```\n\n### Responsive Sizes\n\nPass an array of sizes corresponding to breakpoints.\n\n```react\nshowSource: true\n---\n<Button variant="primary" size={[\'large\', \'medium\']}>\n\tGo\n</Button>\n```\n\n### Supported style customizations\n\nThis component accepts styled-system props.\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<Button variant="primary" size="large" backgroundColor="plum">\n\t\tPlum\n\t</Button>\n\t<Button variant="primary" size="large" width="200px">\n\t\t200px Wide\n\t</Button>\n\t<Button variant="primary" textStyle="ui.12" padding={3}>\n\t\t12px Font, 8px Padding\n\t</Button>\n</ButtonDemo>\n```\n\n## Disabled states\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<Button variant="primary" size="medium" disabled>\n\t\tPrimary\n\t</Button>\n\t<Button variant="secondary" size="medium" disabled>\n\t\tSecondary\n\t</Button>\n\t<Button variant="minor" size="medium" disabled>\n\t\tMinor\n\t</Button>\n\t<Button variant="transparent" size="medium" disabled>\n\t\tTransparent\n\t</Button>\n\t<Button variant="link" size="medium" disabled>\n\t\tLink\n\t</Button>\n\t<Button variant="danger" size="medium" disabled>\n\t\tdanger\n\t</Button>\n\t<Button variant="dangerSpecial" size="medium" disabled>\n\t\tDanger (Special)\n\t</Button>\n</ButtonDemo>\n```\n\n## Loading prop\n\n```react\nshowSource: true\nstate: { loading: false }\n---\n<ButtonDemo>\n\t<Button variant="primary" loading={state.loading} onClick={() => {\n\t\tsetState({ loading: true });\n\t\tsetTimeout(() => setState({ loading: false }), 1000);\n\t}}>\n\t\tPrimary\n\t</Button>\n\t<Button variant="secondary" loading={state.loading} onClick={() => {\n\t\tsetState({ loading: true });\n\t\tsetTimeout(() => setState({ loading: false }), 1000);\n\t}}>\n\t\tSecondary\n\t</Button>\n\t<Button variant="primary" icon={<GearIcon />} loading={state.loading} onClick={() => {\n\t\tsetState({ loading: true });\n\t\tsetTimeout(() => setState({ loading: false }), 1000);\n\t}}>\n\t\tWith Icon\n\t</Button>\n\t<Button variant="transparent" icon={<GearIcon />} loading={state.loading} onClick={() => {\n\t\tsetState({ loading: true });\n\t\tsetTimeout(() => setState({ loading: false }), 1000);\n\t}} />\n</ButtonDemo>\n```\n\n## MultiButtons\n\nMultiButtons inside a container "join" together\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<Box>\n\t\t<MultiButton variant="primary">Primary</MultiButton>\n\t\t<MultiButton variant="secondary">Secondary</MultiButton>\n\t\t<MultiButton variant="transparent">Transparent</MultiButton>\n\t</Box>\n</ButtonDemo>\n```\n\n## Button Select\n\nA common use of MultiButtons is for a "select" like group of buttons serving as options\n\n```react\nshowSource: true\nstate: { value: 0 }\n---\n<ButtonDemo>\n\t<ButtonSelect\n\t\tsize="small"\n\t\ttextStyle="ui.14"\n\t\tminWidth="72px"\n\t\tvalue={state.value}\n\t\toptions={[\n\t\t\t{value: 0, display: "Zero"},\n\t\t\t{value: 1, display: "One"},\n\t\t\t{value: 2, display: "Two"},\n\t\t\t{value: 3, display: "Three", color: "green"},\n\t\t]}\n\t\tonChange={(value) => setState({ value })}\n\t/>\n</ButtonDemo>\n```\n\n## Button Groups (deprecated)\nPrefer using `MultiButton` or `ButtonSelect`\n\n```react\nshowSource: true\n---\n<ButtonDemo>\n\t<SegmentedButtonGroup>\n\t\t<Button variant="transparent" active size="medium">\n\t\t\tPrimary\n\t\t</Button>\n\t\t<Button variant="transparent" size="medium">\n\t\t\tSecondary\n\t\t</Button>\n\t\t<Button variant="transparent" size="medium">\n\t\t\tMinor\n\t\t</Button>\n\t</SegmentedButtonGroup>\n</ButtonDemo>\n```\n'}});
//# sourceMappingURL=49.35ec59b7.chunk.js.map