{"version":3,"sources":["webpack:///static/22.70b251ac.chunk.js","webpack:///./catalog/menu/variations.md?1d06","webpack:///./catalog/menu/variations.md"],"names":["webpackJsonp","1569","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1625"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/22.70b251ac.chunk.js","sourcesContent":["webpackJsonp([22],{\n\n/***/ 1569:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(1);\n    var createReactClass = __webpack_require__(67);\n    var PageRenderer = __webpack_require__(308).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1625)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1625:\n/***/ (function(module, exports) {\n\nmodule.exports = \"```react\\nnoSource: true\\n---\\n<React.Fragment>\\n\\t<V6Banner oldHash=\\\"#/dropdown/variations\\\">\\n\\t\\t<AcceptsStyledSystemProps />\\n\\t\\t<AriaCompliant />\\n\\t</V6Banner>\\n</React.Fragment>\\n```\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Split Dropdown Toggle\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>\\n\\t\\t\\t<Menu.ActionButton onClick={() => alert(\\\"Different Action\\\")}>Show a Dropdown!</Menu.ActionButton>\\n\\t\\t</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Dropdown Menu Items\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false, isChecked: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Title>Dropdown</Menu.Title>\\n\\t\\t\\t<Menu.Separator />\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item\\\")}>Menu Item</Menu.Item>\\n\\t\\t\\t<Menu.CheckboxItem isChecked={state.isChecked} onToggle={() => setState({ isChecked: !state.isChecked })}>Menu Checkbox</Menu.CheckboxItem>\\n\\t\\t\\t<Menu.LinkItem href=\\\"https://faithlife.github.io/styled-ui/#/icons\\\" target=\\\"_blank\\\">Menu Link</Menu.LinkItem>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Using custom toggle component\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>\\n\\t\\t\\t{(ref, {onKeyDown, onClick, ariaProps}) =>\\n\\t\\t\\t\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" ref={ref} onKeyDown={onKeyDown} onClick={onClick} {...ariaProps}>Show a Dropdown!</Button>}\\n\\t\\t</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## With icon\\n\\nvariant = icon | thumbnail | avatar\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} width=\\\"280px\\\" onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>\\n\\t\\t\\t\\t<Menu.ItemIcon><FavoriteFilled /></Menu.ItemIcon>\\n\\t\\t\\t\\t<Menu.ItemPrimaryText>Menu Item 1</Menu.ItemPrimaryText>\\n\\t\\t\\t\\t<Menu.ItemSecondaryText>Variant = Icon</Menu.ItemSecondaryText>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>\\n\\t\\t\\t\\t<Menu.ItemIcon src={thumbnailSrc} variant=\\\"thumbnail\\\" />\\n\\t\\t\\t\\t<Menu.ItemPrimaryText>Menu Item 2</Menu.ItemPrimaryText>\\n\\t\\t\\t\\t<Menu.ItemSecondaryText>Variant = Thumbnail</Menu.ItemSecondaryText>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 3\\\")}>\\n\\t\\t\\t\\t<Menu.ItemIcon src={avatarSrc} variant=\\\"avatar\\\" />\\n\\t\\t\\t\\t<Menu.ItemPrimaryText fontWeight={1}>Menu Item 3 (Avatar)</Menu.ItemPrimaryText>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Styling\\n\\nToggle, Menu, Title, Item, Item variants, and Item config children all accept styled-system props.\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle variant=\\\"minor\\\">Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>\\n\\t\\t\\t\\t<Menu.ItemTextContainer display=\\\"flex\\\">Menu Item 1</Menu.ItemTextContainer>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item color=\\\"red\\\" onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/22.70b251ac.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/menu/variations.md\n// module id = 1569\n// module chunks = 22","module.exports = \"```react\\nnoSource: true\\n---\\n<React.Fragment>\\n\\t<V6Banner oldHash=\\\"#/dropdown/variations\\\">\\n\\t\\t<AcceptsStyledSystemProps />\\n\\t\\t<AriaCompliant />\\n\\t</V6Banner>\\n</React.Fragment>\\n```\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Split Dropdown Toggle\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>\\n\\t\\t\\t<Menu.ActionButton onClick={() => alert(\\\"Different Action\\\")}>Show a Dropdown!</Menu.ActionButton>\\n\\t\\t</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Dropdown Menu Items\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false, isChecked: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Title>Dropdown</Menu.Title>\\n\\t\\t\\t<Menu.Separator />\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item\\\")}>Menu Item</Menu.Item>\\n\\t\\t\\t<Menu.CheckboxItem isChecked={state.isChecked} onToggle={() => setState({ isChecked: !state.isChecked })}>Menu Checkbox</Menu.CheckboxItem>\\n\\t\\t\\t<Menu.LinkItem href=\\\"https://faithlife.github.io/styled-ui/#/icons\\\" target=\\\"_blank\\\">Menu Link</Menu.LinkItem>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Using custom toggle component\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>\\n\\t\\t\\t{(ref, {onKeyDown, onClick, ariaProps}) =>\\n\\t\\t\\t\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" ref={ref} onKeyDown={onKeyDown} onClick={onClick} {...ariaProps}>Show a Dropdown!</Button>}\\n\\t\\t</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## With icon\\n\\nvariant = icon | thumbnail | avatar\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} width=\\\"280px\\\" onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>\\n\\t\\t\\t\\t<Menu.ItemIcon><FavoriteFilled /></Menu.ItemIcon>\\n\\t\\t\\t\\t<Menu.ItemPrimaryText>Menu Item 1</Menu.ItemPrimaryText>\\n\\t\\t\\t\\t<Menu.ItemSecondaryText>Variant = Icon</Menu.ItemSecondaryText>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>\\n\\t\\t\\t\\t<Menu.ItemIcon src={thumbnailSrc} variant=\\\"thumbnail\\\" />\\n\\t\\t\\t\\t<Menu.ItemPrimaryText>Menu Item 2</Menu.ItemPrimaryText>\\n\\t\\t\\t\\t<Menu.ItemSecondaryText>Variant = Thumbnail</Menu.ItemSecondaryText>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 3\\\")}>\\n\\t\\t\\t\\t<Menu.ItemIcon src={avatarSrc} variant=\\\"avatar\\\" />\\n\\t\\t\\t\\t<Menu.ItemPrimaryText fontWeight={1}>Menu Item 3 (Avatar)</Menu.ItemPrimaryText>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\\n## Styling\\n\\nToggle, Menu, Title, Item, Item variants, and Item config children all accept styled-system props.\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<MenuDemo>\\n\\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Menu.Toggle variant=\\\"minor\\\">Show a Dropdown!</Menu.Toggle>\\n\\t\\t<Menu.Dropdown>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 1\\\")}>\\n\\t\\t\\t\\t<Menu.ItemTextContainer display=\\\"flex\\\">Menu Item 1</Menu.ItemTextContainer>\\n\\t\\t\\t</Menu.Item>\\n\\t\\t\\t<Menu.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Menu.Item>\\n\\t\\t\\t<Menu.Item color=\\\"red\\\" onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Menu.Item>\\n\\t\\t</Menu.Dropdown>\\n\\t</Menu>\\n</MenuDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/menu/variations.md\n// module id = 1625\n// module chunks = 22"],"sourceRoot":""}