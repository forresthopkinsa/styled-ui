{"version":3,"sources":["webpack:///static/49.35ec59b7.chunk.js","webpack:///./catalog/button/variations.md?36d8","webpack:///./catalog/button/variations.md"],"names":["webpackJsonp","1547","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1603"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/49.35ec59b7.chunk.js","sourcesContent":["webpackJsonp([49],{\n\n/***/ 1547:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(1);\n    var createReactClass = __webpack_require__(67);\n    var PageRenderer = __webpack_require__(308).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1603)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1603:\n/***/ (function(module, exports) {\n\nmodule.exports = \"```react\\nnoSource: true\\n---\\n<React.Fragment>\\n\\t<V6Banner>\\n\\t\\t<AcceptsStyledSystemProps />\\n\\t</V6Banner>\\n</React.Fragment>\\n```\\n\\nButtons allow users to command the computer to take some action. Buttons, like all standard form components, usually have 16 px space between them.\\n\\n## Component Variations\\n\\n### Variants\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\">\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" size=\\\"medium\\\">\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"minor\\\" size=\\\"medium\\\">\\n\\t\\tMinor\\n\\t</Button>\\n\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\">\\n\\t\\tTransparent\\n\\t</Button>\\n\\t<Button variant=\\\"minorTransparent\\\" size=\\\"medium\\\">\\n\\t\\tMinor Transparent\\n\\t</Button>\\n\\t<Button variant=\\\"link\\\" size=\\\"medium\\\">\\n\\t\\tLink\\n\\t</Button>\\n\\t<Button variant=\\\"danger\\\" size=\\\"medium\\\">\\n\\t\\tDanger\\n\\t</Button>\\n\\t<Button variant=\\\"dangerSpecial\\\" size=\\\"medium\\\">\\n\\t\\tDanger (Special)\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n### Size\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"small\\\">\\n\\t\\tSmall\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\">\\n\\t\\tMedium\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\">\\n\\t\\tLarge\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n### With Icon\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\" icon={<GearIcon />}>\\n\\t\\tSettings\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"small\\\" icon={<GearIcon />}>\\n\\t\\tSettings\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"small\\\" icon={<GearIcon />} />\\n\\t<Button variant=\\\"transparent\\\" size=\\\"small\\\" icon={<GearIcon />} />\\n\\t<Button variant=\\\"minorTransparent\\\" size=\\\"small\\\" icon={<GearIcon />} />\\n</ButtonDemo>\\n```\\n\\n### Responsive Sizes\\n\\nPass an array of sizes corresponding to breakpoints.\\n\\n```react\\nshowSource: true\\n---\\n<Button variant=\\\"primary\\\" size={['large', 'medium']}>\\n\\tGo\\n</Button>\\n```\\n\\n### Supported style customizations\\n\\nThis component accepts styled-system props.\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\" backgroundColor=\\\"plum\\\">\\n\\t\\tPlum\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\" width=\\\"200px\\\">\\n\\t\\t200px Wide\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" textStyle=\\\"ui.12\\\" padding={3}>\\n\\t\\t12px Font, 8px Padding\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n## Disabled states\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" disabled>\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" size=\\\"medium\\\" disabled>\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"minor\\\" size=\\\"medium\\\" disabled>\\n\\t\\tMinor\\n\\t</Button>\\n\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\" disabled>\\n\\t\\tTransparent\\n\\t</Button>\\n\\t<Button variant=\\\"link\\\" size=\\\"medium\\\" disabled>\\n\\t\\tLink\\n\\t</Button>\\n\\t<Button variant=\\\"danger\\\" size=\\\"medium\\\" disabled>\\n\\t\\tdanger\\n\\t</Button>\\n\\t<Button variant=\\\"dangerSpecial\\\" size=\\\"medium\\\" disabled>\\n\\t\\tDanger (Special)\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n## Loading prop\\n\\n```react\\nshowSource: true\\nstate: { loading: false }\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}}>\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}}>\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" icon={<GearIcon />} loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}}>\\n\\t\\tWith Icon\\n\\t</Button>\\n\\t<Button variant=\\\"transparent\\\" icon={<GearIcon />} loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}} />\\n</ButtonDemo>\\n```\\n\\n## MultiButtons\\n\\nMultiButtons inside a container \\\"join\\\" together\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Box>\\n\\t\\t<MultiButton variant=\\\"primary\\\">Primary</MultiButton>\\n\\t\\t<MultiButton variant=\\\"secondary\\\">Secondary</MultiButton>\\n\\t\\t<MultiButton variant=\\\"transparent\\\">Transparent</MultiButton>\\n\\t</Box>\\n</ButtonDemo>\\n```\\n\\n## Button Select\\n\\nA common use of MultiButtons is for a \\\"select\\\" like group of buttons serving as options\\n\\n```react\\nshowSource: true\\nstate: { value: 0 }\\n---\\n<ButtonDemo>\\n\\t<ButtonSelect\\n\\t\\tsize=\\\"small\\\"\\n\\t\\ttextStyle=\\\"ui.14\\\"\\n\\t\\tminWidth=\\\"72px\\\"\\n\\t\\tvalue={state.value}\\n\\t\\toptions={[\\n\\t\\t\\t{value: 0, display: \\\"Zero\\\"},\\n\\t\\t\\t{value: 1, display: \\\"One\\\"},\\n\\t\\t\\t{value: 2, display: \\\"Two\\\"},\\n\\t\\t\\t{value: 3, display: \\\"Three\\\", color: \\\"green\\\"},\\n\\t\\t]}\\n\\t\\tonChange={(value) => setState({ value })}\\n\\t/>\\n</ButtonDemo>\\n```\\n\\n## Button Groups (deprecated)\\nPrefer using `MultiButton` or `ButtonSelect`\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<SegmentedButtonGroup>\\n\\t\\t<Button variant=\\\"transparent\\\" active size=\\\"medium\\\">\\n\\t\\t\\tPrimary\\n\\t\\t</Button>\\n\\t\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\">\\n\\t\\t\\tSecondary\\n\\t\\t</Button>\\n\\t\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\">\\n\\t\\t\\tMinor\\n\\t\\t</Button>\\n\\t</SegmentedButtonGroup>\\n</ButtonDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/49.35ec59b7.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/button/variations.md\n// module id = 1547\n// module chunks = 49","module.exports = \"```react\\nnoSource: true\\n---\\n<React.Fragment>\\n\\t<V6Banner>\\n\\t\\t<AcceptsStyledSystemProps />\\n\\t</V6Banner>\\n</React.Fragment>\\n```\\n\\nButtons allow users to command the computer to take some action. Buttons, like all standard form components, usually have 16 px space between them.\\n\\n## Component Variations\\n\\n### Variants\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\">\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" size=\\\"medium\\\">\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"minor\\\" size=\\\"medium\\\">\\n\\t\\tMinor\\n\\t</Button>\\n\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\">\\n\\t\\tTransparent\\n\\t</Button>\\n\\t<Button variant=\\\"minorTransparent\\\" size=\\\"medium\\\">\\n\\t\\tMinor Transparent\\n\\t</Button>\\n\\t<Button variant=\\\"link\\\" size=\\\"medium\\\">\\n\\t\\tLink\\n\\t</Button>\\n\\t<Button variant=\\\"danger\\\" size=\\\"medium\\\">\\n\\t\\tDanger\\n\\t</Button>\\n\\t<Button variant=\\\"dangerSpecial\\\" size=\\\"medium\\\">\\n\\t\\tDanger (Special)\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n### Size\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"small\\\">\\n\\t\\tSmall\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\">\\n\\t\\tMedium\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\">\\n\\t\\tLarge\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n### With Icon\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\" icon={<GearIcon />}>\\n\\t\\tSettings\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"small\\\" icon={<GearIcon />}>\\n\\t\\tSettings\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"small\\\" icon={<GearIcon />} />\\n\\t<Button variant=\\\"transparent\\\" size=\\\"small\\\" icon={<GearIcon />} />\\n\\t<Button variant=\\\"minorTransparent\\\" size=\\\"small\\\" icon={<GearIcon />} />\\n</ButtonDemo>\\n```\\n\\n### Responsive Sizes\\n\\nPass an array of sizes corresponding to breakpoints.\\n\\n```react\\nshowSource: true\\n---\\n<Button variant=\\\"primary\\\" size={['large', 'medium']}>\\n\\tGo\\n</Button>\\n```\\n\\n### Supported style customizations\\n\\nThis component accepts styled-system props.\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\" backgroundColor=\\\"plum\\\">\\n\\t\\tPlum\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" size=\\\"large\\\" width=\\\"200px\\\">\\n\\t\\t200px Wide\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" textStyle=\\\"ui.12\\\" padding={3}>\\n\\t\\t12px Font, 8px Padding\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n## Disabled states\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" disabled>\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" size=\\\"medium\\\" disabled>\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"minor\\\" size=\\\"medium\\\" disabled>\\n\\t\\tMinor\\n\\t</Button>\\n\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\" disabled>\\n\\t\\tTransparent\\n\\t</Button>\\n\\t<Button variant=\\\"link\\\" size=\\\"medium\\\" disabled>\\n\\t\\tLink\\n\\t</Button>\\n\\t<Button variant=\\\"danger\\\" size=\\\"medium\\\" disabled>\\n\\t\\tdanger\\n\\t</Button>\\n\\t<Button variant=\\\"dangerSpecial\\\" size=\\\"medium\\\" disabled>\\n\\t\\tDanger (Special)\\n\\t</Button>\\n</ButtonDemo>\\n```\\n\\n## Loading prop\\n\\n```react\\nshowSource: true\\nstate: { loading: false }\\n---\\n<ButtonDemo>\\n\\t<Button variant=\\\"primary\\\" loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}}>\\n\\t\\tPrimary\\n\\t</Button>\\n\\t<Button variant=\\\"secondary\\\" loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}}>\\n\\t\\tSecondary\\n\\t</Button>\\n\\t<Button variant=\\\"primary\\\" icon={<GearIcon />} loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}}>\\n\\t\\tWith Icon\\n\\t</Button>\\n\\t<Button variant=\\\"transparent\\\" icon={<GearIcon />} loading={state.loading} onClick={() => {\\n\\t\\tsetState({ loading: true });\\n\\t\\tsetTimeout(() => setState({ loading: false }), 1000);\\n\\t}} />\\n</ButtonDemo>\\n```\\n\\n## MultiButtons\\n\\nMultiButtons inside a container \\\"join\\\" together\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<Box>\\n\\t\\t<MultiButton variant=\\\"primary\\\">Primary</MultiButton>\\n\\t\\t<MultiButton variant=\\\"secondary\\\">Secondary</MultiButton>\\n\\t\\t<MultiButton variant=\\\"transparent\\\">Transparent</MultiButton>\\n\\t</Box>\\n</ButtonDemo>\\n```\\n\\n## Button Select\\n\\nA common use of MultiButtons is for a \\\"select\\\" like group of buttons serving as options\\n\\n```react\\nshowSource: true\\nstate: { value: 0 }\\n---\\n<ButtonDemo>\\n\\t<ButtonSelect\\n\\t\\tsize=\\\"small\\\"\\n\\t\\ttextStyle=\\\"ui.14\\\"\\n\\t\\tminWidth=\\\"72px\\\"\\n\\t\\tvalue={state.value}\\n\\t\\toptions={[\\n\\t\\t\\t{value: 0, display: \\\"Zero\\\"},\\n\\t\\t\\t{value: 1, display: \\\"One\\\"},\\n\\t\\t\\t{value: 2, display: \\\"Two\\\"},\\n\\t\\t\\t{value: 3, display: \\\"Three\\\", color: \\\"green\\\"},\\n\\t\\t]}\\n\\t\\tonChange={(value) => setState({ value })}\\n\\t/>\\n</ButtonDemo>\\n```\\n\\n## Button Groups (deprecated)\\nPrefer using `MultiButton` or `ButtonSelect`\\n\\n```react\\nshowSource: true\\n---\\n<ButtonDemo>\\n\\t<SegmentedButtonGroup>\\n\\t\\t<Button variant=\\\"transparent\\\" active size=\\\"medium\\\">\\n\\t\\t\\tPrimary\\n\\t\\t</Button>\\n\\t\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\">\\n\\t\\t\\tSecondary\\n\\t\\t</Button>\\n\\t\\t<Button variant=\\\"transparent\\\" size=\\\"medium\\\">\\n\\t\\t\\tMinor\\n\\t\\t</Button>\\n\\t</SegmentedButtonGroup>\\n</ButtonDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/button/variations.md\n// module id = 1603\n// module chunks = 49"],"sourceRoot":""}